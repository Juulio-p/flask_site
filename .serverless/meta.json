{
  "/home/poky/Programming/first_flask/serverless.yml": {
    "versionFramework": "4.14.3",
    "servicePath": "/home/poky/Programming/first_flask/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "pokymon",
      "app": "firstappp",
      "service": "firstapplication",
      "provider": {
        "name": "aws",
        "runtime": "python3.8",
        "stage": "dev",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "s3:*"
            ],
            "Resource": "arn:aws:s3:::fav-name-storage/*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Query",
              "dynamodb:Scan",
              "dynamodb:GetItem",
              "dynamodb:PutItem",
              "dynamodb:UpdateItem",
              "dynamodb:DeleteItem"
            ],
            "Resource": [
              {
                "Fn::GetAtt": [
                  "tblname2",
                  "Arn"
                ]
              }
            ]
          }
        ],
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ApiLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/firstapplication-dev-api"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "firstapplication",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/firstapplication-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/firstapplication-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:*"
                          ],
                          "Resource": "arn:aws:s3:::fav-name-storage/*"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem"
                          ],
                          "Resource": [
                            {
                              "Fn::GetAtt": [
                                "tblname2",
                                "Arn"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "firstapplication",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "ApiLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-c4403f02-1f76",
                  "S3Key": "serverless/firstapplication/dev/1746740366348-2025-05-08T21:39:26.348Z/firstapplication.zip"
                },
                "Handler": "wsgi_handler.handler",
                "Runtime": "python3.8",
                "FunctionName": "firstapplication-dev-api",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ApiLogGroup"
              ]
            },
            "ApiLambdaVersionAVMDvm3GnP54JplFuwBNMEiiJ0YpKHX0AfoREmoero": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ApiLambdaFunction"
                },
                "CodeSha256": "OlYgwawmVK0ckmfoKyF3YiNJ7w0bJK37v44sdb4FMts="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-firstapplication",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "ApiLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationApi": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteDefault": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "$default",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationApi"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationApi"
            },
            "tblname2": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "AttributeDefinitions": [
                  {
                    "AttributeName": "userId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  }
                ],
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": 1,
                  "WriteCapacityUnits": 1
                },
                "TableName": "tblname2"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-c4403f02-1f76",
              "Export": {
                "Name": "sls-firstapplication-dev-ServerlessDeploymentBucketName"
              }
            },
            "ApiLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ApiLambdaVersionAVMDvm3GnP54JplFuwBNMEiiJ0YpKHX0AfoREmoero"
              },
              "Export": {
                "Name": "sls-firstapplication-dev-ApiLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-firstapplication-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-firstapplication-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "plugins": [
        "serverless-wsgi",
        "serverless-finch"
      ],
      "package": {
        "patterns": [
          "!**/__pycache__/**",
          "**/*.py",
          "!node_modules/aws-sdk/**",
          "!node_modules/**/aws-sdk/**",
          "wsgi_handler.py",
          "serverless_wsgi.py",
          ".serverless-wsgi",
          "!.requirements/**",
          "_distutils_hack",
          "_distutils_hack/**",
          "blinker",
          "blinker/**",
          "click",
          "click/**",
          "flask",
          "flask/**",
          "itsdangerous",
          "itsdangerous/**",
          "jinja2",
          "jinja2/**",
          "markupsafe",
          "markupsafe/**",
          "pkg_resources",
          "pkg_resources/**",
          "werkzeug",
          "werkzeug/**"
        ],
        "artifactsS3KeyDirname": "serverless/firstapplication/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-c4403f02-1f76",
        "artifact": "/home/poky/Programming/first_flask/.serverless/firstapplication.zip",
        "artifactDirectoryName": "serverless/firstapplication/dev/1746740366348-2025-05-08T21:39:26.348Z"
      },
      "functions": {
        "api": {
          "handler": "wsgi_handler.handler",
          "events": [
            {
              "httpApi": "*",
              "resolvedMethod": "ANY"
            }
          ],
          "name": "firstapplication-dev-api",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "ApiLambdaVersionAVMDvm3GnP54JplFuwBNMEiiJ0YpKHX0AfoREmoero"
        }
      },
      "custom": {
        "wsgi": {
          "app": "app.app"
        },
        "client": {
          "bucketName": "juulio99bucket",
          "errorDocument": "index.html",
          "distributionFolder": "client/dist"
        }
      },
      "resources": {
        "Resources": {
          "tblname2": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "tblname2"
            }
          }
        },
        "Outputs": {}
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.8",
      "stage": "dev",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": "arn:aws:s3:::fav-name-storage/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": [
            {
              "Fn::GetAtt": [
                "tblname2",
                "Arn"
              ]
            }
          ]
        }
      ],
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/firstapplication-dev-api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "firstapplication",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/firstapplication-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/firstapplication-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:*"
                        ],
                        "Resource": "arn:aws:s3:::fav-name-storage/*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Query",
                          "dynamodb:Scan",
                          "dynamodb:GetItem",
                          "dynamodb:PutItem",
                          "dynamodb:UpdateItem",
                          "dynamodb:DeleteItem"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "tblname2",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "firstapplication",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-c4403f02-1f76",
                "S3Key": "serverless/firstapplication/dev/1746740366348-2025-05-08T21:39:26.348Z/firstapplication.zip"
              },
              "Handler": "wsgi_handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "firstapplication-dev-api",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiLogGroup"
            ]
          },
          "ApiLambdaVersionAVMDvm3GnP54JplFuwBNMEiiJ0YpKHX0AfoREmoero": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "OlYgwawmVK0ckmfoKyF3YiNJ7w0bJK37v44sdb4FMts="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-firstapplication",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "ApiLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApi": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDefault": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "$default",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          },
          "tblname2": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "tblname2"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-c4403f02-1f76",
            "Export": {
              "Name": "sls-firstapplication-dev-ServerlessDeploymentBucketName"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionAVMDvm3GnP54JplFuwBNMEiiJ0YpKHX0AfoREmoero"
            },
            "Export": {
              "Name": "sls-firstapplication-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-firstapplication-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-firstapplication-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "d65VB7R0CcGHP0XDt3",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>",
        "$source": {
          "CREDENTIALS_CODE": "<REDACTED>"
        }
      },
      "instanceParameters": null
    },
    "error": {
      "message": "An error occurred: ApiLambdaFunction - Resource handler returned message: \"Unzipped size must be smaller than 262144000 bytes (Service: Lambda, Status Code: 400, Request ID: f0047ca1-ce34-446f-9b6c-7cad7aa04e61) (SDK Attempt Count: 1)\" (RequestToken: dc836839-c7c4-4f03-ccf5-da364e63139f, HandlerErrorCode: InvalidRequest).",
      "stack": "ServerlessError2: An error occurred: ApiLambdaFunction - Resource handler returned message: \"Unzipped size must be smaller than 262144000 bytes (Service: Lambda, Status Code: 400, Request ID: f0047ca1-ce34-446f-9b6c-7cad7aa04e61) (SDK Attempt Count: 1)\" (RequestToken: dc836839-c7c4-4f03-ccf5-da364e63139f, HandlerErrorCode: InvalidRequest).\n    at file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1039:828\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AwsDeploy.update (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1039:25270)\n    at async aws:deploy:deploy:updateStack (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1050:7906)\n    at async PluginManager.runHooks (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1241:9549)\n    at async PluginManager.invoke (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1241:10318)\n    at async PluginManager.spawn (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1241:10677)\n    at async PluginManager.runHooks (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1241:9549)\n    at async PluginManager.invoke (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1241:10318)\n    at async PluginManager.run (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1241:11047)\n    at async Serverless.run (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1248:10523)\n    at async runFramework (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1275:1777)\n    at async TraditionalRunner.run (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1271:28313)\n    at async route (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1302:2779)\n    at async Object.run (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1303:3661)\n    at async run2 (file:///home/poky/.serverless/releases/4.14.3/package/dist/sf-core.js:1303:4815)",
      "code": "AWS_CLOUD_FORMATION_UPDATE_STACK_INTERNAL_LAMBDA_FUNCTION_UPDATE_FAILED"
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: pokymon\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: firstappp\nservice: firstapplication\n\nprovider:\n  name: aws\n  runtime: python3.8\n  stage: ${opt:stage, 'dev'}\n\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - s3:*\n      Resource: \"arn:aws:s3:::fav-name-storage/*\"\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - { \"Fn::GetAtt\": [\"tblname2\", \"Arn\" ] }\n\nplugins:\n  - serverless-wsgi\n  - serverless-finch\n\npackage:\n  patterns:\n    - '!**/__pycache__/**'\n    - '**/*.py'\n    - '!node_modules/aws-sdk/**'\n    - '!node_modules/**/aws-sdk/**'\n\nfunctions:\n  api:\n    handler: wsgi_handler.handler\n    events:\n      - httpApi: \"*\"\n    \ncustom:\n  wsgi:\n    app: app.app\n  client:\n    bucketName: juulio99bucket\n    errorDocument: index.html\n    distributionFolder: client/dist   # This points to your Vite output\n\n \n    \nresources:\n  Resources:\n    tblname2:\n      Type: 'AWS::DynamoDB::Table'\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: userId\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: userId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: \"tblname2\"\n\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "d8fe2701-a7ba-41da-8179-657ddc82b1ad",
    "orgName": "pokymon",
    "userId": "lWj7X0r5Dv40RLyJds",
    "userName": "pokymon",
    "serviceProviderAwsAccountId": "654654253965",
    "serviceProviderAwsCfStackName": "firstapplication-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:654654253965:stack/firstapplication-dev/c7f0ef20-1db4-11f0-bd9c-0affc0d5459b",
    "serviceProviderAwsCfStackCreated": "2025-04-20T06:57:53.548Z",
    "serviceProviderAwsCfStackUpdated": "2025-05-08T21:35:56.783Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:654654253965:function:firstapplication-dev-api:201",
        "Description": "Current Lambda function version",
        "ExportName": "sls-firstapplication-dev-ApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "5q87zjb5yd",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-firstapplication-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-c4403f02-1f76",
        "ExportName": "sls-firstapplication-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://5q87zjb5yd.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-firstapplication-dev-HttpApiUrl"
      }
    ]
  }
}